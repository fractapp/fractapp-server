// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/anon/github/Fractapp/fractapp-server/push/notificator.go

// Package mocks is a generated GoMock package.
package mocks

import (
	push "fractapp-server/push"
	types "fractapp-server/types"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNotificator is a mock of Notificator interface
type MockNotificator struct {
	ctrl     *gomock.Controller
	recorder *MockNotificatorMockRecorder
}

// MockNotificatorMockRecorder is the mock recorder for MockNotificator
type MockNotificatorMockRecorder struct {
	mock *MockNotificator
}

// NewMockNotificator creates a new mock instance
func NewMockNotificator(ctrl *gomock.Controller) *MockNotificator {
	mock := &MockNotificator{ctrl: ctrl}
	mock.recorder = &MockNotificatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNotificator) EXPECT() *MockNotificatorMockRecorder {
	return m.recorder
}

// Notify mocks base method
func (m *MockNotificator) Notify(title, msg, token string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Notify", title, msg, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// Notify indicates an expected call of Notify
func (mr *MockNotificatorMockRecorder) Notify(title, msg, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Notify", reflect.TypeOf((*MockNotificator)(nil).Notify), title, msg, token)
}

// CreateMsg mocks base method
func (m *MockNotificator) CreateMsg(txType push.TxType, amount, usdAmount float64, currency types.Currency) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMsg", txType, amount, usdAmount, currency)
	ret0, _ := ret[0].(string)
	return ret0
}

// CreateMsg indicates an expected call of CreateMsg
func (mr *MockNotificatorMockRecorder) CreateMsg(txType, amount, usdAmount, currency interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMsg", reflect.TypeOf((*MockNotificator)(nil).CreateMsg), txType, amount, usdAmount, currency)
}
