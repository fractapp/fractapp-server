definitions:
  auth.Address:
    properties:
      address:
        description: Blockchain address from account
        type: string
      pubKey:
        description: PubKey from account
        type: string
      sign:
        description: 'Sign for message (more information here: https://github.com/fractapp/fractapp-server/blob/main/AUTH.md)'
        type: string
    type: object
  auth.ConfirmAuthRq:
    properties:
      addresses:
        additionalProperties:
          $ref: '#/definitions/auth.Address'
        description: Addresses by network (0 - polkadot/ 1 - kusama) from account
        type: object
      code:
        description: The code that was sent
        type: string
      type:
        description: Message type with code (0 - sms / 1 - email)
        enum:
        - 0
        - 1
        type: integer
      value:
        description: Email address or Phone number (without +)
        type: string
    type: object
  auth.SendCodeRq:
    properties:
      type:
        description: Message type (0 - sms / 1 - email)
        enum:
        - 0
        - 1
        type: integer
      value:
        description: Email address or Phone number (without +)
        type: string
    type: object
  auth.TokenRs:
    properties:
      token:
        description: JWT token
        type: string
    type: object
  info.Price:
    properties:
      currency:
        type: integer
      value:
        type: number
    type: object
  info.SubstrateUrl:
    properties:
      network:
        type: integer
      url:
        type: string
    type: object
  info.TotalInfo:
    properties:
      prices:
        items:
          $ref: '#/definitions/info.Price'
        type: array
      substrateUrls:
        items:
          $ref: '#/definitions/info.SubstrateUrl'
        type: array
    type: object
  profile.Balance:
    properties:
      value:
        type: string
    type: object
  profile.MyProfile:
    properties:
      avatarExt:
        description: avatar format (png/jpg/jpeg)
        type: string
      email:
        type: string
      id:
        description: id from userInfo
        type: string
      isMigratory:
        description: always false. This property is for the future
        type: boolean
      lastUpdate:
        description: timestamp of the last userInfo update
        type: integer
      name:
        description: name in fractapp
        type: string
      phoneNumber:
        type: string
      username:
        description: username in fractapp
        type: string
    type: object
  profile.ShortUserProfile:
    properties:
      addresses:
        additionalProperties:
          type: string
        description: String addresses by network (0 - polkadot/ 1 - kusama) from account
        type: object
      avatarExt:
        description: avatar format (png/jpg/jpeg)
        type: string
      id:
        description: id from userInfo
        type: string
      isChatBot:
        description: always false. This property is for the future
        type: boolean
      lastUpdate:
        description: timestamp of the last userInfo update
        type: integer
      name:
        type: string
      username:
        type: string
    type: object
  profile.Transaction:
    properties:
      currency:
        type: integer
      fee:
        type: string
      from:
        type: string
      hash:
        type: string
      id:
        type: string
      status:
        type: integer
      timestamp:
        type: integer
      to:
        type: string
      value:
        type: string
    type: object
  profile.TxStatusRs:
    properties:
      status:
        type: integer
    type: object
  profile.UpdateFirebaseTokenRq:
    properties:
      token:
        type: string
    type: object
  profile.UpdateProfileRq:
    properties:
      name:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: support@fractapp.com
    name: Support
  license:
    name: Apache 2.0
    url: https://github.com/fractapp/fractapp-server/blob/main/LICENSE
  termsOfService: https://fractapp.com/legal/tos.pdf
paths:
  /auth/sendCode:
    post:
      consumes:
      - application/json
      description: send auth code to email/phone
      operationId: send-auth-code
      parameters:
      - description: Send code rq
        in: body
        name: rq
        required: true
        schema:
          $ref: '#/definitions/auth.SendCodeRq'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "202":
          description: Accepted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Send code
      tags:
      - Authorization
  /auth/signIn:
    post:
      consumes:
      - application/json
      description: sign in to fractapp account
      operationId: signIn
      parameters:
      - description: Confirm auth rq
        in: body
        name: rq
        required: true
        schema:
          $ref: '#/definitions/auth.ConfirmAuthRq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.TokenRs'
        "400":
          description: Bad Request
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "429":
          description: Too Many Requests
          schema:
            type: string
      security:
      - AuthWithPubKey-SignTimestamp: []
      - AuthWithPubKey-Sign: []
      - AuthWithPubKey-Auth-Key: []
      summary: Sign in
      tags:
      - Authorization
  /info/total:
    get:
      consumes:
      - application/json
      description: get user by id or blockchain address
      operationId: info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/info.TotalInfo'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get total info
      tags:
      - Info
  /notification/subscribe:
    post:
      consumes:
      - application/json
      description: subscribe for notifications about transaction
      operationId: subscribe
      parameters:
      - description: update token request
        in: body
        name: rq
        required: true
        schema:
          $ref: '#/definitions/profile.UpdateFirebaseTokenRq'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Subscribe
      tags:
      - Notification
  /profile/avatar/{userId}:
    get:
      consumes:
      - application/json
      operationId: avatar
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get user avatar
      tags:
      - Profile
  /profile/contacts:
    get:
      consumes:
      - application/json
      operationId: myContacts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - AuthWithJWT: []
      summary: Get my contacts
      tags:
      - Profile
  /profile/matchContacts:
    get:
      consumes:
      - application/json
      description: Only those who are in your contacts can see your profile by phone
        number. Your number should also be in their contacts.
      operationId: myMatchContacts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - AuthWithJWT: []
      summary: Get my matched contacts
      tags:
      - Profile
  /profile/my:
    get:
      consumes:
      - application/json
      operationId: myProfile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.MyProfile'
        "400":
          description: ""
      security:
      - AuthWithJWT: []
      summary: Get my profile
      tags:
      - Profile
  /profile/search:
    get:
      consumes:
      - application/json
      description: search user by email or username
      operationId: search
      parameters:
      - description: username or email value
        in: query
        name: value
        required: true
        type: string
      - description: email/username
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/profile.ShortUserProfile'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: ""
      summary: Search user
      tags:
      - Profile
  /profile/substrate/balance:
    get:
      consumes:
      - application/json
      operationId: getBalance
      parameters:
      - description: address
        in: query
        name: address
        required: true
        type: string
      - description: currency
        in: query
        name: currency
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.Balance'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get substrateBalance by address
      tags:
      - Profile
  /profile/substrate/fee:
    get:
      consumes:
      - application/json
      operationId: substrateTxBase
      parameters:
      - description: sender
        in: query
        name: sender
        required: true
        type: string
      - description: receiver
        in: query
        name: receiver
        required: true
        type: string
      - description: currency
        in: query
        name: currency
        required: true
        type: integer
      - description: value
        in: query
        name: value
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.Balance'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Calculate fee for substrate tx
      tags:
      - Profile
  /profile/transaction/status:
    get:
      consumes:
      - application/json
      operationId: getTxStatus
      parameters:
      - description: hash
        in: query
        name: hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.TxStatusRs'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get tx status
      tags:
      - Profile
  /profile/transactions:
    get:
      consumes:
      - application/json
      operationId: getTransactions
      parameters:
      - description: address
        in: query
        name: address
        required: true
        type: string
      - description: currency
        in: query
        name: currency
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.Transaction'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get transactions by address
      tags:
      - Profile
  /profile/updateProfile:
    post:
      consumes:
      - application/json
      operationId: updateProfile
      parameters:
      - description: update profile model
        in: body
        name: rq
        required: true
        schema:
          $ref: '#/definitions/profile.UpdateProfileRq'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - AuthWithJWT: []
      summary: Update my profile
      tags:
      - Profile
  /profile/uploadAvatar:
    post:
      consumes:
      - application/x-www-form-urlencoded
      operationId: uploadAvatar
      parameters:
      - description: image/jpeg or image/jpg or image/png
        in: formData
        name: format
        required: true
        type: string
      - description: avatar in base64 (https://onlinepngtools.com/convert-png-to-base64)
        in: formData
        name: avatar
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - AuthWithJWT: []
      summary: Update avatar
      tags:
      - Profile
  /profile/uploadContacts:
    post:
      consumes:
      - application/json
      operationId: uploadMyContacts
      parameters:
      - description: phone numbers of contacts
        in: body
        name: rq
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - AuthWithJWT: []
      summary: Upload my phone numbers of contacts
      tags:
      - Profile
  /profile/userInfo:
    get:
      consumes:
      - application/json
      description: get user by id
      operationId: profileInfo
      parameters:
      - description: get user profile by user id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/profile.ShortUserProfile'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get user
      tags:
      - Profile
  /profile/username:
    get:
      consumes:
      - application/json
      operationId: username
      parameters:
      - description: username min length 4
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Is username exist?
      tags:
      - Profile
securityDefinitions:
  AuthWithJWT:
    in: header
    name: Authorization
    type: apiKey
  AuthWithPubKey-Auth-Key:
    in: header
    name: Auth-Key
    type: apiKey
  AuthWithPubKey-Sign:
    in: header
    name: Sign
    type: apiKey
  AuthWithPubKey-SignTimestamp:
    in: header
    name: Sign-Timestamp
    type: apiKey
swagger: "2.0"
